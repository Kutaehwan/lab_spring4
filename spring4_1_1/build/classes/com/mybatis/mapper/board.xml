<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> <!-- .dtd : 명세서 -->
<mapper namespace="com.mybatis.mapper.BoardMapper">
<!-- id와 method이름 통일 -->

	<insert id="boardMInsert" parameterType="map">
		INSERT INTO board_master2019(bm_no, bm_title, bm_writer, bm_email, bm_content, bm_hit, bm_date, bm_group, bm_pos, bm_step, bm_pw) 
		                      values(#{bm_no},#{bm_title},#{bm_writer},#{bm_email}
		                           , #{bm_content}, #{bm_hit}, to_char(sysdate, 'YYYY-MM-DD'), 0,0,0,#{bm_pw}
		                            )
	</insert>
	
	<insert id="boardSInsert" parameterType="map">
		INSERT INTO board_sub2019(bm_no,bs_seq,bs_file,bs_size) values(#{bm_no},#{bs_seq},#{bs_file},#{bs_size})
	</insert>
	
	<update id="hitCount" parameterType="int">
		UPDATE board_master2019
		   SET bm_hit = bm_hit + 1
		 WHERE bm_no = #{value}
	</update>
	
	<update id="bmStepUpdate" parameterType="map">
		UPDATE board_master2019
		   SET bm_step = bm_step + 1
		 WHERE bm_group = #{bm_group}
		 <![CDATA[ and bm_step > #{bm_step} ]]> <!-- '>'를 텍스트로 이해하기 때문에 CDATA를 써준다. -->
	</update>
	
	<delete id="boardMDel" parameterType="map">
		DELETE FROM board_master2019 WHERE bm_no = #{bm_no}
	</delete>
	
	<delete id="boardSDel" parameterType="map">
		DELETE FROM board_sub2019 WHERE bm_no = #{bm_no}
	</delete>
	
	<select id="getBmNo" parameterType="int" resultType="int">
		SELECT NVL((SELECT /*+index_desc(board_master2019 BM_NO_PK)*/ bm_no
					  FROM board_master2019
					 WHERE rownum=1),0)+1 bm_no FROM dual
	</select>
	
	<select id="getBmGroup" parameterType="Map" resultType="int">
		SELECT NVL((SELECT /*+index_desc(board_master2019 ibm_group)*/ bm_group
					  FROM board_master2019
					 WHERE rownum=1 AND bm_group > 0),0)+1 bm_group
		  FROM dual
	</select>

<!-- sqlSesstion.selectList(id, parmeter) -->
	<select id="getBoardList" parameterType="map" resultType="map">
		select bm.bm_no, bm.bm_title, bm.bm_date, bs.bs_file, bm.bm_hit
			,bm.bm_group, bm.bm_pos, bm.bm_step, bm.bm_email, bm.bm_pw, bm.bm_content, bm.bm_writer
  		  from board_master2019 bm, board_sub2019 bs
 		 where bm.bm_no = bs.bm_no(+)
 		 <if test='cb_search != null and cb_search.equals("bm_title")'>
 		 	AND bm.bm_title LIKE '%' || # {tb_search} || '%'
 		 </if>
 		 <if test='bm_no > 0'>
 		 	AND bm.bm_no = #{bm_no}
 		 </if>
 		 ORDER BY bm_group desc, bm_no asc
	</select>
	
	<select id="test" parameterType="map" resultType="string">
		<!-- select To_CHAR(sysdate, 'YYYY-MM-DD') from dual  -->
		select TO_CHAR(sysdate, 'YYYY-MM-DD') from dual
	</select>
</mapper>